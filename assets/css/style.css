* {
    margin: 0;
    padding: 0;
}

/* Duas formas de fazer, de acordo com a herança ou selecionando a tag - mas tem que observar como esta estruturado o HTML*/
p {
    /* color: darkblue; */
}

body div section p {
    /* toda section que esta dentro da div que esta dentro do body (esta selecionando somente a section) - so é selecionado o ultimo elemento */
    /* para selecionar mais de um elemento tem que usar a virgula ex: body, div, section, p */
    /* color: darkblue; */
}




/* EXE2 */
.heading {
    /* color: blueviolet; */
}

/* div.main-content h2.heading  a main content que tem um descendente que é o h2 com a classe heading */
.main-content h2,
h3,
h4 {
    /* ou .main-content .heading */
    font-style: italic;
}

.pai {
    /* background-color: aqua; */
}

/* div {
    color: inherit;
}  faz com que seja herdado as propriedades 
   div {
    color: initial para tirar essa configuração herdar 
*/

/* child selector - seletor de descendentes*/
/* .pai > .filha a classe pai esta diretamente ligada a classe filha - ou seja a classe filha esta dentro da classe pai */

/* EXE3 */
.pai h1+p {
    /* selector de irmãos - seleciona todo elemento que tiver depois diretamente do elemento pai */
    color: brown;
}

.pai p+h1 {
    color: yellow;
}

/* EXE4 */
.pai h1~p {
    /*  seleciona todos depois da tag escolhida */
    color: aqua;
}

.pai .um~.dois {
    /*  seleciona todos depois da tag escolhida */
    color: aqua;
}


/* selecionar atributos */
[meu-atributo=valor] {
    /* ou selecionar apenas o nome do atributo */
    color: red;
}

/* [checked] {
    width: 50px;
    height: 50px;
} */

/* para selecionar o quecomeça é com ^ e para selecionar com o que termina é com $*, pois um atributo pode ter varios valores */


/* EXE 5 */
/* para fazer alguma transição */
.heading {
    transition: all 300ms ease-in-out;
    /* all para selecionar todos - depois vc digita quanto tempo deseja - e por ultimo como quer que a transição ocorra */
}

.heading:hover {
    background-color: rgb(13, 146, 102);
}

/* pseudo classes de links */

a:link {
    color: aquamarine;
}

a:hover {
    color: yellowgreen;
}

a:visited {
    color: blueviolet;
}

a:active {
    background-color: blue;
}

/* input:focus {
    box-shadow: 0 0 5px rgba(0, 0, 0, 0.5);
    outline: none;
    border: 1px solid black;
}

input:disabled {
    background-color: red;
} */

/* input:checked { */
/* mudar o estado do ckeckbox quando ele estiver selecionado */
/* width: 50px;
    height: 50px;
}

input:checked+p {
    /* muda a cor do p quando o input estiver marcado estiver marcado 
    color: aqua;
}

input:not(:checked) + p { Quando o checkbox não estiver selecionado ele ficará vermelho 
color: red;
}

/* child */
/* firts child - o primeiro filho 
last child - o ultimo filho */

/* .pai .lista li:last-child {
    background-color: aqua;
} */
/* 
Se eu quiser uma configuração especifica em um input do tipo required (ou outro), posso fazer da seguinte forma 
input:required {
 e colocar a consfiguração desejada 
}
*/

p:not(.meio) {
    /* exclui a classe selecionada */
    color: aqua;
}


ul li:nth-child(even) {
    /* even para selecionar todos os pares - odd para selecionar os impares*/
    background-color: aqua;
}

ul li:nth-child(odd) {
    /* even para selecionar todos os pares - odd para selecionar os impares*/
    background-color: rgb(104, 128, 128);
}

ul li:nth-child(3n) { /* de 3 em 3 muda para outra cor */
background-color: aquamarine;
}

ul li:nth-child(3n + 5) { /* começando do 5 elemento eu vou mudar a cor de 3 em 3 */
    background-color: rgb(111, 209, 127);
}